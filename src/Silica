
-- this simply for testing, 99% of this won't be in the final thing

local loaded = {}

local function loadClass( path )
	if not loaded[path] then
		dofile( path )
		loaded[path] = true
	end
end

function loadName( name )
	local function checkDir( path )
		if fs.exists( path .. "/" .. name .. ".lua" ) then
			loadClass( path .. "/" .. name .. ".lua" )
			return true
		end

		local list = fs.list( path )

		for i, v in ipairs( list ) do
			if fs.isDir( path .. '/' .. v ) then
				if checkDir( path .. '/' .. v) then
					return true
				end
			end
		end
	end
	checkDir( "src/classes" )
end

local function loadDir( path )
	local list = fs.list( path )
	for i, v in ipairs( list ) do
		if v ~= '.DS_Store' then
			local fpath = path .. '/' .. v
			if fs.isDir( fpath ) then
				loadDir( fpath )
			else
				loadClass( fpath )
			end
		end
	end
end

local function loadFirst()
	local h = fs.open( "src/loadfirst.scfg", "r" )
	local line
	repeat
		line = h.readLine()
		if line and #line > 0 then
			loadName( line )
		end
	until not line
	h.close()
end

-- TODO: tidy the paths and allow the user to provide values
local resourceDirectories = { 'src/', 'application/' }

local function load()
	loadClass( "src/class.lua" )
	loadFirst()
	Application.resourceDirectories = resourceDirectories
	for i, dir in ipairs( resourceDirectories ) do
		loadDir( dir .. "classes" )
	end
end

load()