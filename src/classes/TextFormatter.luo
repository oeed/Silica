-- written in love2d so I'll port it over at some point

class TextFormatter
	default width = 0
	default height = 0

	default text = ""

	-- this stuff is actually controlled by the Font class
	-- might be better to make it a table of fonts and the range of the string
	-- but up to you, i'm not really sure how it works

	-- these are defaults, since they can change
	property Graphics.colours colour = Graphics.colours.GREY
	property underline
	property strikethrough

	default font_name = "default"
	default font_size = 5
	default font_mode = "default" -- italic, bold, bolditalic

	default xAlignment = "left" -- alignment.LEFT ?
	default yAlignment = "top" -- alignment.TOP?

	property changed
	property stream
	property wrappedStream

	function initialise( text, width, height )
		self.text = text
		self.width = width
		self.height = height
	end

	 -- this is called when a variable is set right?:  Yes, arguments are key, value if you want them
	function set()
		self.changed = true
	end

	function tostream()
		if not self.changed and self.stream then
			return self.stream
		end
		-- convert text into a formatted stream of characters
	end

	function wrapstream( display_width, display_height, stream )
		if not self.changed and self.wrappedStream then
			return self.wrappedStream
		end
		stream = stream or self:tostream()
		-- wordwrap the stream and sort out alignment
	end

end