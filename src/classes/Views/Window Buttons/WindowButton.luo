BUTTON_DIAMETER = 5

class WindowButton extends View 

	default width = 9
	default height = 9
	property Boolean isPressed = false

	property Window window

	--[[
		@desc Creates a button object and connects the event handlers
	]]
	function initialise( ... )
		super( ... )
		
		self:event( DownMouseEvent, self.onMouseDown )
		self.eventManager:connectGlobal( UpMouseEvent, self.onGlobalMouseUp, Event.phases.BEFORE )
		if self.onMouseUp then self:event( UpMouseEvent, self.onMouseUp ) end
	end

	function onDraw()
		local width, height, theme, canvas = self.width, self.height, self.theme, self.canvas

		local diameter = theme:value( "diameter" )
		local circleMask = CircleMask( 1 + math.ceil( ( width - diameter ) / 2 ), 1 + math.ceil( ( height - diameter ) / 2 ), diameter )
		canvas:fill( theme:value( "fillColour" ), circleMask )
		canvas:outline( theme:value( "outlineColour" ), circleMask, theme:value( "outlineThickness" ) )
	end

	function updateThemeStyle()
		self.theme.style = self.isEnabled and ( self.isPressed and "pressed" or "default" ) or "disabled"
	end

	set isEnabled( isEnabled )
		self.isEnabled = isEnabled
		self:updateThemeStyle()
	end

	set isPressed( isPressed )
		self.isPressed = isPressed
		self:updateThemeStyle()
	end

	--[[
		@desc Fired when the mouse is released anywhere on screen. Removes the pressed appearance.
		@param [Event] event -- the mouse up event
		@return [boolean] preventPropagation -- prevent anyone else using the event
	]]
	function onGlobalMouseUp( UpMouseEvent event, Event.phases phase )
		if self.isPressed and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = false
			if self.isEnabled and self:hitTestEvent( event ) then
				return self.eventManager:handleEvent( event )
			end
		end
	end

	--[[
		@desc Fired when the mouse is pushed anywhere on screen. Adds the pressed appearance.
		@param [DownMouseEvent] event -- the mouse down event
		@return [boolean] preventPropagation -- prevent anyone else using the event
	]]
	function onMouseDown( DownMouseEvent event, Event.phases phase )
		if self.isEnabled and event.mouseButton == MouseEvent.mouseButtons.LEFT then
			self.isPressed = true
		end
		return true
	end

end