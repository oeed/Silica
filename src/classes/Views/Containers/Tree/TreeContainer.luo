
class TreeContainer extends ListContainer implements IAutomaticLayout 
	

	function onChildAdded( ChildAddedInterfaceEvent event, Event.phases phase )
		if not event.childView:typeOf( ITreeChild ) then
			error( "Attempted to add view '" .. tostring( event.childView ) .. "' that does not extend ITreeChild to '" .. tostring( self ) .. "'", 0 )
		end
		self.needsLayoutUpdate = true
	end

	function updateLayout( Boolean( false ) dontAnimate )
		local children, width = self.children, self.width
		local theme = self.theme
		local y = theme:value( "topMargin" ) + 1

		local time, easing
		if not dontAnimate then
			time = theme:value( "animationDuration" )
			easing = theme:value( "animationEasing" )
		end
		for i, childView in ipairs( children ) do
			if dontAnimate then
				childView.y = y
			else
				childView:animate( "y", y, time, nil, easing )
			end
			childView.x = 1
			childView.width = width
			y = y + ( childView:typeOf( TreeNode ) and ( ( childView.isFolded and childView.minHeight or childView.maxHeight) or 0 ) or childView.height )
		end

		local height = y + self.theme:value( "bottomMargin" )
		if dontAnimate then
			self.height = height
		else
			self:animate( "height", height, time, nil, easing )
		end

		self.needsLayoutUpdate = false
	end

end