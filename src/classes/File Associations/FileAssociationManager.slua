
class FileAssociationManager {
	
	static = {

		associations = Table( {} );
		extensionMimes = Table( {} );

	}

}

function FileAssociationManager.static:registerAssociation( FileAssociation association, Number.allowsNil index )
	local associations = self.associations
	local mime = association.mime
	local mimeAssociations = associations[mime]
	if not mimeAssociations then
		mimeAssociations = {}
		associations[mime] = mimeAssociations
	end

	if index then
		table.insert( mimeAssociations, index, association )
	else
		table.insert( mimeAssociations, association )
	end

	-- add these assocation's extensions to the extensionMimes table
	local extensionMimes = self.extensionMimes
	for i, extension in ipairs( association.extensions ) do
		if not extensionMimes[extension] then -- we'll only set the mime if there isn't one already there. theortically they should be identical anyway
			extensionMimes[extension] = mime
		end
	end
	local application = self.application
	if application then
		application.event:handleEvent( FileAssociationRegisteredInterfaceEvent( association ) )
	end
end

function FileAssociationManager.static:open( FileSystemItem fileSystemItem )
	local path, mime = fileSystemItem.path, fileSystemItem.metadata.mime
	local association = self:getAssociation( mime )
	if association then
		local programBundle = association.programBundle
		if programBundle then
			local argumentFormat = association.argumentFormat
			local arguments = {}
			for i, argument in ipairs( argumentFormat ) do
				table.insert( arguments, argument == true and path or argument )
			end
			self.application.programManager:run( Program.static:fromBundle( programBundle, arguments ) )
		end
	end
end

--[[
	@desc Returns the main association for the given MIME
]]
function FileAssociationManager.static:getAssociation( String.allowsNil mime )
	if mime then
		local associations = self.associations
		local mimeAssociations = associations[mime]
		if mimeAssociations then
			return mimeAssociations[1]
		end
	end
end

--[[
	@desc Returns the all associations for the given MIME
]]
function FileAssociationManager.static:getAllAssociations( String mime )
	return self.associations[mime] or {}
end
